#!/bin/bash

make monte_carlo  # Rebuild the monte_carlo executable.

# Obtain the coordinates of the points generated by the monte_carlo program
# and separate them into two files (in/out quadrant)
./monte_carlo -n 20000 | tail -n +2 > monte_carlo.dat  
awk '$5 == 1 {print $3, $4} ' monte_carlo.dat > blue_dots.dat
awk '$5 == 0 {print $3, $4} ' monte_carlo.dat > red_dots.dat

pi=`echo "4*a(1)" | bc -l`  # Define pi

# Generate 6 files of estimated pi error using random seeds.
for i in {0..5}
    do 
	    num=$RANDOM
	    ./monte_carlo -n 20000 -r $num | tail -n +2 | awk ' {print $1, ('$pi'-$2)} ' > mc_err_${i}.dat
    done

# Plot the monte carlo scattered points.
gnuplot <<END
    set terminal pdf
    set output "pi_dot.pdf"
    set size square
    f(x) = sqrt(1 - x**2)
    plot "blue_dots.dat" with dots title "" lt rgb "blue", \
        "red_dots.dat" with dots title "" lt rgb "red", \
        f(x) with lines title "" lt rgb "#000000"
END

# Plot the pi error lines.
gnuplot <<END
    set terminal pdf
    set output "mc_error.pdf"
    set yrange [-1:1]
    set xrange [1:20000]
    set logscale x 2
    set title "Monte Carlo Error Estimation"
    set ylabel "Error"
    set grid xtics ytics
    plot "mc_err_0.dat" with lines title "" lt rgb "#FF6666", \
        "mc_err_1.dat" with lines title "" lt rgb "#FFB2666", \
        "mc_err_2.dat" with lines title "" lt rgb "#00CC66", \
        "mc_err_3.dat" with lines title "" lt rgb "#3399FF", \
        "mc_err_4.dat" with lines title "" lt rgb "#CC99FF", \
        "mc_err_5.dat" with lines title "" lt rgb "#99004C"
END
